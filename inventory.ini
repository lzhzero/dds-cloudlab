#cockroachDB Cluster IP
[cockroach_first_node]
192.168.0.1

[cockroach_other_nodes]
192.168.0.[2:3]

# BangDB Cluster IP
[bangdb_master]
192.168.0.1

[bangdb_slave]
192.168.0.[2:3]

# Hyperdex Cluster IP
[hyperdex_coordinator]
192.168.0.1

[hyperdex_daemon]
192.168.0.[1:3]

# YCSBC Cluster IP
[ycsbc_servers]
192.168.0.[1:3]

[ycsbc_clients]
192.168.0.[4:6]

# DTranx Cluster IP
[dtranx_all]
192.168.0.[1:3]

# Logcabin Cluster IP
[logcabin_all]
192.168.0.[1:3]

# ssh via normal user
[all:vars]
ansible_user = {{lookup('env','USER')}}
cluser_name = test-cluster


#bangdb vars
bangdb_host_count = {{groups['all'] | length}}
bangdb_slave_count = {{groups['bangdb_slave'] | length}}
bangdb_server_ip = 192.168.0.1
bangdb_port = 10101


#hyperdex vars
hyperdex_hash_num = 100
#coordinator port
hyperdex_c_port = 7777
hyperdex_c_ip = 192.168.0.1
#daemon port
hyperdex_d_port = 7776


home_dir = {{lookup('env', 'HOME')}}
project_dir = {{home_dir}}/Test


#CockroachDB vars
cockroach_dir = {{project_dir}}/cockroachDB
cockroach_initial_ip = 192.168.0.1

# this is the same as VAR servers, it is used for localhost to perform ycsb TestAnalyzer
ycsb_servers = {{groups['ycsbc_servers']}}

# global vars are easier for TaskAnalyzer
#[ycsbc_clients:vars]
servers = {{groups['ycsbc_servers']}}
benchmark_dir = {{project_dir}}/benchmark
# the local path for workloads and ycsbc in the ansible master machine, it is not the same as the path
# in the ycsbc clients.
workloads_path = '["{{home_dir}}/workloaddtranx.spec", "{{home_dir}}/workloadhyperdex.spec", "{{home_dir}}/workloadrtree.spec", "{{home_dir}}/workloadbtree.spec"]'

workload_files = '["workloaddtranx.spec","workloadrtree.spec","workloadbtree.spec"]'
#workload_files = '["workloaddtranx.spec","workloadhyperdex.spec","workloadrtree.spec","workloadbtree.spec"]'

ycsbc_path = {{home_dir}}/ycsbc
server_ips_filename = server.ips
###
### the following configs are for concurrent client running
### 
thread = 10
# db choices are dtranx, hyperdex, bangdb, btree, rtree
db = dtranx 
workload = workload{{db}}.spec
# firsttime should be set when this is the first time to run clients 
# on the initialized databases. only applies to btree, rtree databases
# choices are 1/0 to enable/disable firsttime
firsttime = 1
stable_start = 20000
stable_end = 80000

logcabin_src_dir = {{home_dir}}/Logcabin
logcabin_dir = {{project_dir}}/Logcabin
dtranx_src_dir = {{home_dir}}/DTranx
dtranx_dir = {{project_dir}}/DTranx

ycsb_src_dir = {{home_dir}}/YCSB-C-DTranx
libs_dir = {{home_dir}}/libs
# dtranx default vars
# can be override by using --extra-vars
dtranx_PerfLog = 1
dtranx_routerFrontPort = 30000
dtranx_maxIOThreads = 1
dtranx_maxSockets = 200
dtranx_LogOption = Pmem
dtranx_PersistLogDir = /mnt/mem
dtranx_FileTruncate = 100000000
dtranx_PartitionBroadcastThreshold = 100
dtranx_ServerMode = vm
dtranx_GCPollingPeriod = 1000000
dtranx_RepartitionTranxFilter = 50
dtranx_InitializeDB = 0
dtranx_DBSize = 10000000
dtranx_IsRead = 1
#dtranx_datastructure = dtranx,btree, rtree
dtranx_datastructure = dtranx
# dtranx_mode
# 1. restore
# 2. 
dtranx_mode = 1
